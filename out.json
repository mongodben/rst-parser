[["info.description","Admin API for MongoDB Realm"],["servers.[0].description","The root API resource and starting point for the Realm API."],["paths./auth/providers.get.summary","Enumerate available Realm administration authentication providers."],["paths./auth/providers.get.responses.200.description","Successfully enumerated available authentication providers."],["paths./auth/providers.get.responses.200.content.application/json.schema.description","An array of authentication providers."],["paths./auth/providers/{provider}/login.post.summary","Authenticate as a Realm administrator. Use `GET /auth/providers <{+base-url+}{+admin-api-page+}get-/auth/providers>`_ to list the available authentication providers."],["paths./auth/providers/{provider}/login.post.responses.200.description","Authentication was successful."],["paths./auth/providers/{provider}/login.post.responses.200.content.application/json.schema.properties.access_token.description","An access token you may provide in the ``Authorization`` header of API requests. :ref:`realm-api-authentication` demonstrates how to use this token."],["paths./auth/providers/{provider}/login.post.responses.200.content.application/json.schema.properties.refresh_token.description","A refresh token you may provide in the ``Authorization`` header of `POST auth/session <{+base-url+}{+admin-api-page+}post-auth/session>`_ to obtain a new ``access_token`` for the current user session."],["paths./auth/providers/{provider}/login.post.responses.200.content.application/json.schema.properties.user_id.description","The unique _id value of the MongoDB Cloud user."],["paths./auth/providers/{provider}/login.parameters.[0].description","The authentication provider to use."],["paths./auth/profile.get.summary","Get information about the currently logged in user."],["paths./auth/profile.get.responses.200.description","The profile was successfully retrieved."],["paths./auth/session.delete.summary","Delete a Realm access token."],["paths./auth/session.delete.responses.401.description","invalid refresh token: incorrect token type"],["paths./auth/session.post.summary","Obtain a Realm access token."],["paths./auth/session.post.responses.201.description","Successfully created."],["paths./groups/{groupId}/apps.get.summary","List all Realm apps within an |atlas| :atlas:`project/group </tutorial/manage-projects/>`."],["paths./groups/{groupId}/apps.get.parameters.[0].description","Specify ``product=atlas`` to include :atlas:`Atlas trigger </triggers>` apps."],["paths./groups/{groupId}/apps.get.responses.200.description","Successfully listed."],["paths./groups/{groupId}/apps.post.summary","Create a new Realm app."],["paths./groups/{groupId}/apps.post.parameters.[0].description","Whether or not to create a default application."],["paths./groups/{groupId}/apps.post.requestBody.description","The application to create."],["paths./groups/{groupId}/apps.post.responses.201.description","The application was successfully created."],["paths./groups/{groupId}/apps/{appId}.get.summary","Retrieve an application definition."],["paths./groups/{groupId}/apps/{appId}.get.responses.200.description","The application was successfully retrieved."],["paths./groups/{groupId}/apps/{appId}.delete.summary","Delete an application."],["paths./groups/{groupId}/apps/{appId}.delete.responses.204.description","The application was successfully deleted."],["paths./groups/{groupId}/apps/{appId}/export.get.summary",":ref:`Export <export-realm-app>` an application as a zip file."],["paths./groups/{groupId}/apps/{appId}/export.get.responses.200.description","The application was successfully exported."],["paths./groups/{groupId}/apps/{appId}/triggers.post.summary","Create a trigger."],["paths./groups/{groupId}/apps/{appId}/triggers.post.requestBody.description","The trigger to create."],["paths./groups/{groupId}/apps/{appId}/triggers.post.responses.201.description","Successfully created."],["paths./groups/{groupId}/apps/{appId}/triggers.get.summary","List all triggers."],["paths./groups/{groupId}/apps/{appId}/triggers.get.responses.200.description","Successfully listed triggers."],["paths./groups/{groupId}/apps/{appId}/triggers/{triggerId}.put.summary","Update a trigger."],["paths./groups/{groupId}/apps/{appId}/triggers/{triggerId}.put.requestBody.description","The trigger to update."],["paths./groups/{groupId}/apps/{appId}/triggers/{triggerId}.put.responses.204.description","Successfully updated the trigger."],["paths./groups/{groupId}/apps/{appId}/triggers/{triggerId}.put.responses.409.description","Encountered an error while updating the trigger."],["paths./groups/{groupId}/apps/{appId}/triggers/{triggerId}.get.summary","Retrieve the configuration for a specific trigger."],["paths./groups/{groupId}/apps/{appId}/triggers/{triggerId}.get.responses.200.description","Successfully retrieved trigger."],["paths./groups/{groupId}/apps/{appId}/triggers/{triggerId}.delete.summary","Delete a trigger."],["paths./groups/{groupId}/apps/{appId}/triggers/{triggerId}.delete.responses.200.description","Successfully deleted the trigger."],["paths./groups/{groupId}/apps/{appId}/triggers/{triggerId}/resume.put.summary","Resume a suspended trigger."],["paths./groups/{groupId}/apps/{appId}/triggers/{triggerId}/resume.put.responses.204.description","Successfully resumed the trigger."],["paths./groups/{groupId}/apps/{appId}/triggers/{triggerId}/resume.put.responses.404.description","Trigger not found."],["paths./groups/{groupId}/apps/{appId}/triggers/{triggerId}/resume.put.responses.404.content.application/json.schema.properties.error.description","A description of the error that Realm encountered."],["paths./groups/{groupId}/apps/{appId}/values.get.summary","List all :doc:`values </values-and-secrets>` defined in an application."],["paths./groups/{groupId}/apps/{appId}/values.get.responses.200.description",":doc:`values </values-and-secrets>` were successfully enumerated."],["paths./groups/{groupId}/apps/{appId}/values.post.summary","Define a :doc:`Value </values-and-secrets>` in an application."],["paths./groups/{groupId}/apps/{appId}/values.post.requestBody.description","The value to create."],["paths./groups/{groupId}/apps/{appId}/values.post.responses.201.description","The :doc:`value </values-and-secrets>` was successfully defined."],["paths./groups/{groupId}/apps/{appId}/values/{valueId}.get.summary","Retrieve a :doc:`value </values-and-secrets>` definition from an application."],["paths./groups/{groupId}/apps/{appId}/values/{valueId}.get.responses.200.description","Successfully retrieved the value."],["paths./groups/{groupId}/apps/{appId}/values/{valueId}.delete.summary","Delete a :doc:`value </values-and-secrets>` defined in an application."],["paths./groups/{groupId}/apps/{appId}/values/{valueId}.delete.responses.204.description","Successfully deleted the value."],["paths./groups/{groupId}/apps/{appId}/values/{valueId}.put.summary","Update a :doc:`value </values-and-secrets>` definition in an application."],["paths./groups/{groupId}/apps/{appId}/values/{valueId}.put.responses.200.description","Successfully updated the value."],["paths./groups/{groupId}/apps/{appId}/services.get.summary","List all :ref:`services <services>` within an application."],["paths./groups/{groupId}/apps/{appId}/services.get.responses.200.description","Successfully listed services."],["paths./groups/{groupId}/apps/{appId}/services.post.summary","Create a :ref:`service <services>`."],["paths./groups/{groupId}/apps/{appId}/services.post.responses.201.description","Successfully created the service."],["paths./groups/{groupId}/apps/{appId}/services.post.responses.409.description","There is already a service with the given ``name``."],["paths./groups/{groupId}/apps/{appId}/services/{serviceId}.get.summary","Retrieve a :ref:`service <services>`."],["paths./groups/{groupId}/apps/{appId}/services/{serviceId}.get.responses.200.description","The service was successfully deleted."],["paths./groups/{groupId}/apps/{appId}/services/{serviceId}.delete.summary","Delete a :ref:`service <services>`."],["paths./groups/{groupId}/apps/{appId}/services/{serviceId}.delete.responses.204.description","The service was successfully deleted."],["paths./groups/{groupId}/apps/{appId}/services/{serviceId}.patch.summary","Update a :ref:`service <services>`."],["paths./groups/{groupId}/apps/{appId}/services/{serviceId}.patch.responses.200.description","Successfully updated."],["paths./groups/{groupId}/apps/{appId}/services/{serviceId}/commands/{commandName}.post.summary","Run a command associated with a :ref:`service <services>`."],["paths./groups/{groupId}/apps/{appId}/services/{serviceId}/commands/{commandName}.post.responses.200.description","Successfully executed."],["paths./groups/{groupId}/apps/{appId}/services/{serviceId}/commands/build_info.get.summary","Get information about the underlying Atlas mongod."],["paths./groups/{groupId}/apps/{appId}/services/{serviceId}/commands/build_info.get.responses.200.description","The build information was successfully retrieved."],["paths./groups/{groupId}/apps/{appId}/services/{serviceId}/config.get.summary","Retrieve a :ref:`service's <services>` configuration."],["paths./groups/{groupId}/apps/{appId}/services/{serviceId}/config.get.responses.200.description","Successfully retrieved."],["paths./groups/{groupId}/apps/{appId}/services/{serviceId}/config.patch.summary","Update a :ref:`service's <services>` configuration."],["paths./groups/{groupId}/apps/{appId}/services/{serviceId}/config.patch.responses.200.description","Successfully updated."],["paths./groups/{groupId}/apps/{appId}/services/{serviceId}/rules.get.summary","List :ref:`rules <mongodb-rules>`."],["paths./groups/{groupId}/apps/{appId}/services/{serviceId}/rules.get.responses.200.description","Successfully listed."],["paths./groups/{groupId}/apps/{appId}/services/{serviceId}/rules.post.summary","Create a :ref:`rule <mongodb-rules>`."],["paths./groups/{groupId}/apps/{appId}/services/{serviceId}/rules.post.requestBody.description","The rule to create."],["paths./groups/{groupId}/apps/{appId}/services/{serviceId}/rules.post.responses.201.description","Successfully created."],["paths./groups/{groupId}/apps/{appId}/services/{serviceId}/rules.post.responses.409.description","There is already a rule with the given ``name``."],["paths./groups/{groupId}/apps/{appId}/services/{serviceId}/rules/{ruleId}.get.summary","Retrieve a :ref:`rule <mongodb-rules>`."],["paths./groups/{groupId}/apps/{appId}/services/{serviceId}/rules/{ruleId}.get.responses.200.description","Successfully retrieved."],["paths./groups/{groupId}/apps/{appId}/services/{serviceId}/rules/{ruleId}.delete.summary","Delete a :ref:`rule <mongodb-rules>`."],["paths./groups/{groupId}/apps/{appId}/services/{serviceId}/rules/{ruleId}.delete.responses.204.description","Successfully deleted."],["paths./groups/{groupId}/apps/{appId}/services/{serviceId}/rules/{ruleId}.put.summary","Update a :ref:`rule <mongodb-rules>`."],["paths./groups/{groupId}/apps/{appId}/services/{serviceId}/rules/{ruleId}.put.requestBody.description","The new state of the rule."],["paths./groups/{groupId}/apps/{appId}/services/{serviceId}/rules/{ruleId}.put.responses.200.description","Successfully updated."],["paths./groups/{groupId}/apps/{appId}/services/{serviceId}/commands/generate_schema.post.summary","Sample a subset of documents in a collection to generate a JSON schema."],["paths./groups/{groupId}/apps/{appId}/services/{serviceId}/commands/generate_schema.post.requestBody.content.application/json.schema.properties.database_name.description","The name of the database that contains the collection."],["paths./groups/{groupId}/apps/{appId}/services/{serviceId}/commands/generate_schema.post.requestBody.content.application/json.schema.properties.collection_name.description","The name of the collection to sample and generate a schema for."],["paths./groups/{groupId}/apps/{appId}/services/{serviceId}/commands/generate_schema.post.requestBody.content.application/json.schema.properties.limit.description","The maximum number of documents to include in the sample."],["paths./groups/{groupId}/apps/{appId}/services/{serviceId}/commands/generate_schema.post.responses.200.description","Successfully generated schema"],["paths./groups/{groupId}/apps/{appId}/services/{serviceId}/commands/generate_schema.post.responses.200.content.application/json.schema.properties.schema.description","The generated JSON schema"],["paths./groups/{groupId}/apps/{appId}/services/{serviceId}/incoming_webhooks.get.summary","List :ref:`webhooks <service-webhooks>`."],["paths./groups/{groupId}/apps/{appId}/services/{serviceId}/incoming_webhooks.get.responses.200.description","Successfully listed incoming webhooks."],["paths./groups/{groupId}/apps/{appId}/services/{serviceId}/incoming_webhooks.post.summary","Create a :ref:`webhook <service-webhooks>`."],["paths./groups/{groupId}/apps/{appId}/services/{serviceId}/incoming_webhooks.post.requestBody.description","The webhook to create."],["paths./groups/{groupId}/apps/{appId}/services/{serviceId}/incoming_webhooks.post.responses.201.description","Successfully created."],["paths./groups/{groupId}/apps/{appId}/services/{serviceId}/incoming_webhooks/{incomingWebhookId}.get.summary","Retrieve a :ref:`webhook <service-webhooks>`."],["paths./groups/{groupId}/apps/{appId}/services/{serviceId}/incoming_webhooks/{incomingWebhookId}.get.responses.200.description","Successfully retrieved."],["paths./groups/{groupId}/apps/{appId}/services/{serviceId}/incoming_webhooks/{incomingWebhookId}.delete.summary","Delete a :ref:`webhook <service-webhooks>`."],["paths./groups/{groupId}/apps/{appId}/services/{serviceId}/incoming_webhooks/{incomingWebhookId}.delete.responses.204.description","Successfully deleted."],["paths./groups/{groupId}/apps/{appId}/services/{serviceId}/incoming_webhooks/{incomingWebhookId}.put.summary","Update a :ref:`webhook <service-webhooks>`."],["paths./groups/{groupId}/apps/{appId}/services/{serviceId}/incoming_webhooks/{incomingWebhookId}.put.requestBody.description","The updated state of the webhook."],["paths./groups/{groupId}/apps/{appId}/services/{serviceId}/incoming_webhooks/{incomingWebhookId}.put.responses.200.description","Successfully updated."],["paths./groups/{groupId}/apps/{appId}/sync/data.get.summary","Get sync information for a specific linked MongoDB cluster."],["paths./groups/{groupId}/apps/{appId}/sync/data.get.responses.200.description","Successfully retrieved."],["paths./groups/{groupId}/apps/{appId}/sync/data.get.parameters.[0].description","The Service ID for the linked cluster."],["paths./groups/{groupId}/apps/{appId}/push/notifications.get.summary","List :ref:`push notifications <push-notifications>`."],["paths./groups/{groupId}/apps/{appId}/push/notifications.get.parameters.[0].description","Only list notifications with the given state."],["paths./groups/{groupId}/apps/{appId}/push/notifications.get.responses.200.description","Successfully listed."],["paths./groups/{groupId}/apps/{appId}/push/notifications.post.summary","Create a :ref:`push notification <push-notifications>`."],["paths./groups/{groupId}/apps/{appId}/push/notifications.post.requestBody.description","The notification to create."],["paths./groups/{groupId}/apps/{appId}/push/notifications.post.responses.201.description","Successfully created."],["paths./groups/{groupId}/apps/{appId}/push/notifications/{messageId}.get.summary","Retrieve a :ref:`push notification <push-notifications>` message."],["paths./groups/{groupId}/apps/{appId}/push/notifications/{messageId}.get.responses.200.description","Successfully retrieved."],["paths./groups/{groupId}/apps/{appId}/push/notifications/{messageId}.delete.summary","Delete a :ref:`push notification <push-notifications>` message."],["paths./groups/{groupId}/apps/{appId}/push/notifications/{messageId}.delete.responses.204.description","Successfully deleted."],["paths./groups/{groupId}/apps/{appId}/push/notifications/{messageId}.put.summary","Update a :ref:`push notification <push-notifications>` message."],["paths./groups/{groupId}/apps/{appId}/push/notifications/{messageId}.put.responses.200.description","Successfully updated."],["paths./groups/{groupId}/apps/{appId}/push/notifications/{messageId}/type.put.summary","Set a :ref:`push notification's <push-notifications>` type."],["paths./groups/{groupId}/apps/{appId}/push/notifications/{messageId}/type.put.responses.200.description","Successfully set."],["paths./groups/{groupId}/apps/{appId}/push/notifications/{messageId}/send.post.summary","Send a :ref:`push notification <push-notifications>`."],["paths./groups/{groupId}/apps/{appId}/push/notifications/{messageId}/send.post.responses.200.description","Successfully sent."],["paths./groups/{groupId}/apps/{appId}/users.get.summary","List :ref:`users <user-accounts>`."],["paths./groups/{groupId}/apps/{appId}/users.get.responses.200.description","Successfully listed."],["paths./groups/{groupId}/apps/{appId}/users.get.responses.200.content.application/json.schema.description","At most 50 results per request."],["paths./groups/{groupId}/apps/{appId}/users.post.summary","Create a :ref:`user <user-accounts>`."],["paths./groups/{groupId}/apps/{appId}/users.post.requestBody.description","The user to create"],["paths./groups/{groupId}/apps/{appId}/users.post.responses.201.description","Successfully created."],["paths./groups/{groupId}/apps/{appId}/users/verify_token.post.summary","Verify a that a user's :ref:`client access token <get-client-api-access-token>` is valid."],["paths./groups/{groupId}/apps/{appId}/users/verify_token.post.requestBody.description","The user's :ref:`client access token <get-client-api-access-token>`. This is distinct from the :ref:`API access token <realm-api-authentication>` you need to authenticate to the admin API."],["paths./groups/{groupId}/apps/{appId}/users/verify_token.post.responses.200.description","Success returns this object. A 200 :ref:`may also return token expired<verify-client-access-token-responses>`."],["paths./groups/{groupId}/apps/{appId}/users/verify_token.post.responses.200.content.application/json.schema.properties.sub.description","User ID."],["paths./groups/{groupId}/apps/{appId}/users/verify_token.post.responses.200.content.application/json.schema.properties.aud.description","Optional; specifies which Resource Servers the JWT is valid for. Omitted if empty."],["paths./groups/{groupId}/apps/{appId}/users/verify_token.post.responses.200.content.application/json.schema.properties.exp.description","Unix timestamp after which the JWT expires."],["paths./groups/{groupId}/apps/{appId}/users/verify_token.post.responses.200.content.application/json.schema.properties.iat.description","Unix timestamp at which the JWT was issued."],["paths./groups/{groupId}/apps/{appId}/users/verify_token.post.responses.200.content.application/json.schema.properties.iss.description","The issuer of the JWT."],["paths./groups/{groupId}/apps/{appId}/users/verify_token.post.responses.200.content.application/json.schema.properties.custom_user_data.description","Optional; contains :ref:`custom user data <custom-user-data>` if it exists for the user. Only present if the access token is created after custom user data is enabled and configured. Omitted if empty."],["paths./groups/{groupId}/apps/{appId}/users/verify_token.post.responses.200.content.application/json.schema.properties.domain_id.description","The UID representing the app domain."],["paths./groups/{groupId}/apps/{appId}/users/verify_token.post.responses.200.content.application/json.schema.properties.data.description","Optional: any metadata stored with the token. Omitted if empty."],["paths./groups/{groupId}/apps/{appId}/users/verify_token.post.responses.200.content.application/json.schema.properties.device_id.description","The UID representing the device."],["paths./groups/{groupId}/apps/{appId}/users/{uid}.get.summary","Retrieve a :ref:`user <user-accounts>`."],["paths./groups/{groupId}/apps/{appId}/users/{uid}.get.responses.200.description","Successfully retrieved."],["paths./groups/{groupId}/apps/{appId}/users/{uid}.delete.summary","Delete a :ref:`user <user-accounts>`."],["paths./groups/{groupId}/apps/{appId}/users/{uid}.delete.responses.204.description","Successfully deleted."],["paths./groups/{groupId}/apps/{appId}/users/{uid}/devices.get.summary","List a user's devices."],["paths./groups/{groupId}/apps/{appId}/users/{uid}/devices.get.responses.200.description","Successfully listed."],["paths./groups/{groupId}/apps/{appId}/users/{uid}/logout.put.summary","Revoke all of a :ref:`user <user-accounts>`'s sessions."],["paths./groups/{groupId}/apps/{appId}/users/{uid}/logout.put.responses.204.description","Successfully revoked."],["paths./groups/{groupId}/apps/{appId}/users/{uid}/enable.put.summary","Enable a :ref:`user <user-accounts>`."],["paths./groups/{groupId}/apps/{appId}/users/{uid}/enable.put.responses.204.description","Successfully enabled."],["paths./groups/{groupId}/apps/{appId}/users/{uid}/disable.put.summary","Disable a :ref:`user <user-accounts>`."],["paths./groups/{groupId}/apps/{appId}/users/{uid}/disable.put.responses.204.description","Successfully disabled."],["paths./groups/{groupId}/apps/{appId}/user_registrations/by_email/{email}.delete.summary","Delete a pending :ref:`user <user-accounts>`."],["paths./groups/{groupId}/apps/{appId}/user_registrations/by_email/{email}.delete.responses.204.description","Successfully deleted."],["paths./groups/{groupId}/apps/{appId}/user_registrations/by_email/{email}/send_confirm.post.summary","Send a :doc:`confirmation email </email-password>`."],["paths./groups/{groupId}/apps/{appId}/user_registrations/by_email/{email}/send_confirm.post.responses.200.description","Successfully sent."],["paths./groups/{groupId}/apps/{appId}/user_registrations/by_email/{email}/confirm.post.summary","Confirm a pending :ref:`user <user-accounts>`."],["paths./groups/{groupId}/apps/{appId}/user_registrations/by_email/{email}/confirm.post.responses.204.description","Successfully confirmed."],["paths./groups/{groupId}/apps/{appId}/user_registrations/by_email/{email}/run_confirm.post.summary","Re-runs a pending :ref:`user's <user-accounts>` :ref:`confirmation workflow <email-password-authentication-confirmation>`."],["paths./groups/{groupId}/apps/{appId}/user_registrations/by_email/{email}/run_confirm.post.responses.202.description","Successfully re-ran confirmation workflow."],["paths./groups/{groupId}/apps/{appId}/user_registrations/by_email/{email}/run_confirm.post.responses.400.description","User is already confirmed or Email/Password authentication is not enabled."],["paths./groups/{groupId}/apps/{appId}/user_registrations/by_email/{email}/run_confirm.post.responses.404.description","User does not exist."],["paths./groups/{groupId}/apps/{appId}/debug/execute_function.post.summary","Execute a :ref:`function <functions>` for testing."],["paths./groups/{groupId}/apps/{appId}/debug/execute_function.post.parameters.[0].description","The user as which to execute the function. Either ``user_id`` or ``run_as_system`` is required. You cannot specify both."],["paths./groups/{groupId}/apps/{appId}/debug/execute_function.post.parameters.[1].description","Determine whether or not to run as system user. Either ``run_as_system`` or ``user_id`` is required. You cannot specify both."],["paths./groups/{groupId}/apps/{appId}/debug/execute_function.post.requestBody.description","The function to execute."],["paths./groups/{groupId}/apps/{appId}/debug/execute_function.post.requestBody.content.application/json.schema.properties.service.description","The service to use when calling this function."],["paths./groups/{groupId}/apps/{appId}/debug/execute_function.post.requestBody.content.application/json.schema.properties.name.description","The name of the function you want to run."],["paths./groups/{groupId}/apps/{appId}/debug/execute_function.post.requestBody.content.application/json.schema.properties.arguments.description","Any arguments that your function needs."],["paths./groups/{groupId}/apps/{appId}/debug/execute_function.post.responses.200.description","Successfully executed."],["paths./groups/{groupId}/apps/{appId}/debug/execute_function_source.post.summary","Execute a :ref:`function <functions>`'s source code for testing."],["paths./groups/{groupId}/apps/{appId}/debug/execute_function_source.post.parameters.[0].description","The user as which to execute the function. Either ``user_id`` or ``run_as_system`` is required. You cannot specify both."],["paths./groups/{groupId}/apps/{appId}/debug/execute_function_source.post.parameters.[1].description","Determine whether or not to run as system user. Either ``run_as_system`` or ``user_id`` is required. You cannot specify both."],["paths./groups/{groupId}/apps/{appId}/debug/execute_function_source.post.requestBody.description","The source to execute."],["paths./groups/{groupId}/apps/{appId}/debug/execute_function_source.post.requestBody.content.application/json.schema.properties.eval_source.description","This JSON expression must evaluate to ``true`` before the function may run. If this field is blank, it will evaluate to ``true``."],["paths./groups/{groupId}/apps/{appId}/debug/execute_function_source.post.responses.200.description","Successfully executed."],["paths./groups/{groupId}/apps/{appId}/auth_providers.get.summary","List :doc:`authentication providers </authentication/providers>` within a Realm app."],["paths./groups/{groupId}/apps/{appId}/auth_providers.get.responses.200.description","Successfully listed."],["paths./groups/{groupId}/apps/{appId}/auth_providers.post.summary","Create an :doc:`authentication provider </authentication/providers>`."],["paths./groups/{groupId}/apps/{appId}/auth_providers.post.requestBody.description",""],["paths./groups/{groupId}/apps/{appId}/auth_providers.post.responses.201.description","Successfully created."],["paths./groups/{groupId}/apps/{appId}/auth_providers/{providerId}.get.summary","Retrieve information about one of an application's :doc:`authentication providers </authentication/providers>`"],["paths./groups/{groupId}/apps/{appId}/auth_providers/{providerId}.get.responses.200.description","Successfully retrieved."],["paths./groups/{groupId}/apps/{appId}/auth_providers/{providerId}.delete.summary","Delete an :doc:`authentication provider </authentication/providers>`."],["paths./groups/{groupId}/apps/{appId}/auth_providers/{providerId}.delete.responses.204.description","Successfully deleted."],["paths./groups/{groupId}/apps/{appId}/auth_providers/{providerId}.patch.summary","Update an :doc:`authentication provider </authentication/providers>`."],["paths./groups/{groupId}/apps/{appId}/auth_providers/{providerId}.patch.requestBody.description",""],["paths./groups/{groupId}/apps/{appId}/auth_providers/{providerId}.patch.responses.204.description","Successfully updated."],["paths./groups/{groupId}/apps/{appId}/auth_providers/{providerId}/disable.put.summary","Disable an :doc:`authentication provider </authentication/providers>`."],["paths./groups/{groupId}/apps/{appId}/auth_providers/{providerId}/disable.put.responses.204.description","Successfully disabled."],["paths./groups/{groupId}/apps/{appId}/auth_providers/{providerId}/enable.put.summary","Enable an :doc:`authentication provider </authentication/providers>`."],["paths./groups/{groupId}/apps/{appId}/auth_providers/{providerId}/enable.put.responses.204.description","Successfully enabled."],["paths./groups/{groupId}/apps/{appId}/security/allowed_request_origins.get.summary","List the allowed :mdn:`HTTP origins <Web/HTTP/Headers/Origin>` from which MongoDB Realm should allow requests."],["paths./groups/{groupId}/apps/{appId}/security/allowed_request_origins.get.responses.200.description","Successfully listed."],["paths./groups/{groupId}/apps/{appId}/security/allowed_request_origins.post.summary","Set the allowed :mdn:`HTTP origins <Web/HTTP/Headers/Origin>` from which {+service+} should allow requests."],["paths./groups/{groupId}/apps/{appId}/security/allowed_request_origins.post.requestBody.description","A list of HTTP origins."],["paths./groups/{groupId}/apps/{appId}/security/allowed_request_origins.post.requestBody.content.application/json.schema.items.description","An HTTP origin. Must be of the form ``<scheme>://<host>[:port]``."],["paths./groups/{groupId}/apps/{appId}/security/allowed_request_origins.post.responses.204.description","The allowed HTTP origins were successfully set."],["paths./groups/{groupId}/apps/{appId}/security/access_list.get.summary","List the allowed entries in the Access List of your Realm app."],["paths./groups/{groupId}/apps/{appId}/security/access_list.get.responses.200.description",""],["paths./groups/{groupId}/apps/{appId}/security/access_list.get.responses.200.content.application/json.schema.items.properties.allowed_ips.items.properties._id.description","ObjectID"],["paths./groups/{groupId}/apps/{appId}/security/access_list.get.responses.200.content.application/json.schema.items.properties.allowed_ips.items.properties.ip.description","net.IP"],["paths./groups/{groupId}/apps/{appId}/security/access_list.get.responses.200.content.application/json.schema.items.properties.allowed_ips.items.properties.network.description","net.IPNet"],["paths./groups/{groupId}/apps/{appId}/security/access_list.post.summary","Create an IP address or CIDR block in the Access List for your {+app+}."],["paths./groups/{groupId}/apps/{appId}/security/access_list.post.responses.201.description",""],["paths./groups/{groupId}/apps/{appId}/security/access_list.post.responses.201.content.application/json.schema.properties._id.description","ObjectID"],["paths./groups/{groupId}/apps/{appId}/security/access_list.post.responses.201.content.application/json.schema.properties.ip.description","net.IP"],["paths./groups/{groupId}/apps/{appId}/security/access_list.post.responses.201.content.application/json.schema.properties.network.description","net.IPNet"],["paths./groups/{groupId}/apps/{appId}/security/access_list/{ipId}.patch.summary","Modify an IP address or CIDR block in the Access List of your {+app+}"],["paths./groups/{groupId}/apps/{appId}/security/access_list/{ipId}.patch.responses.201.description",""],["paths./groups/{groupId}/apps/{appId}/security/access_list/{ipId}.patch.responses.201.content.application/json.schema.properties._id.description","ObjectID"],["paths./groups/{groupId}/apps/{appId}/security/access_list/{ipId}.patch.responses.201.content.application/json.schema.properties.ip.description","net.IP"],["paths./groups/{groupId}/apps/{appId}/security/access_list/{ipId}.patch.responses.201.content.application/json.schema.properties.network.description","net.IPNet"],["paths./groups/{groupId}/apps/{appId}/security/access_list/{ipId}.parameters.[2].description","The IP address entry denoted by ``ip_id`` with the information given in the request body"],["paths./groups/{groupId}/apps/{appId}/security/access_list/{ipId}.delete.summary","Delete an IP address or CIDR block from the Access List of your {+app+}"],["paths./groups/{groupId}/apps/{appId}/security/access_list/{ipId}.delete.responses.404.description","No IP addresses or CIDR blocks to delete"],["paths./groups/{groupId}/apps/{appId}/logs.get.summary","Retrieve MongoDB Realm logs."],["paths./groups/{groupId}/apps/{appId}/logs.get.parameters.[0].description","Return only log messages associated with the given request ID."],["paths./groups/{groupId}/apps/{appId}/logs.get.parameters.[1].description","Whether to only return errors."],["paths./groups/{groupId}/apps/{appId}/logs.get.parameters.[2].description","Return only log messages associated with the given ``user_id``."],["paths./groups/{groupId}/apps/{appId}/logs.get.parameters.[3].description","The date and time in ISO 8601 at which to begin returning results, exclusive."],["paths./groups/{groupId}/apps/{appId}/logs.get.parameters.[4].description","The date and time in ISO 8601 at which to cease returning results, inclusive."],["paths./groups/{groupId}/apps/{appId}/logs.get.parameters.[5].description","The offset number of matching log entries to skip before including them in the response."],["paths./groups/{groupId}/apps/{appId}/logs.get.parameters.[6].description","The maximum number of log entries to include in the response. If the query matches more than this many logs, it returns documents in ascending order by date until the limit is reached."],["paths./groups/{groupId}/apps/{appId}/logs.get.responses.200.description","Successfully retrieved."],["paths./groups/{groupId}/apps/{appId}/logs.get.responses.200.content.application/json.schema.properties.logs.description","At most 100 results per request."],["paths./groups/{groupId}/apps/{appId}/logs.get.responses.200.content.application/json.schema.properties.logs.items.properties.app_id.description","The ObjectID of your application. :ref:`realm-api-project-and-application-ids` demonstrates how to find this value."],["paths./groups/{groupId}/apps/{appId}/logs.get.responses.200.content.application/json.schema.properties.logs.items.properties.group_id.description","An |atlas| :atlas:`Project/Group ID </tutorial/manage-projects/>`."],["paths./groups/{groupId}/apps/{appId}/logs.get.responses.200.content.application/json.schema.properties.nextEndDate.description","The end date and time of the next page of log entries in ISO 8601 format. MongoDB Realm paginates the result sets of queries that match more than 100 log entries and includes this field in paginated responses. To get the next page of up to 100 entries, pass this value as the ``end_date`` parameter in a subsequent request."],["paths./groups/{groupId}/apps/{appId}/logs.get.responses.200.content.application/json.schema.properties.nextSkip.description","The offset into the next page of log entries in ISO 8601 format. MongoDB Realm paginates the result sets of queries that match more than 100 log entries and includes this field in paginated responses where the first entry on the next page has the same timestamp as the last entry on this page. To get the next page of up to 100 entries, pass this value, if it is present, as the ``skip`` parameter in a subsequent request."],["paths./groups/{groupId}/apps/{appId}/api_keys.get.summary","List :doc:`API keys </authentication/api-key>` associated with a Realm app."],["paths./groups/{groupId}/apps/{appId}/api_keys.get.responses.200.description","The API keys were successfully listed."],["paths./groups/{groupId}/apps/{appId}/api_keys.post.summary","Create a new :doc:`API key </authentication/api-key>`."],["paths./groups/{groupId}/apps/{appId}/api_keys.post.requestBody.description","The API key to create."],["paths./groups/{groupId}/apps/{appId}/api_keys.post.responses.201.description","The API key was successfully created."],["paths./groups/{groupId}/apps/{appId}/api_keys/{apiKeyId}.get.summary","Retrieve information about an :doc:`API key </authentication/api-key>`."],["paths./groups/{groupId}/apps/{appId}/api_keys/{apiKeyId}.get.responses.200.description","The API key was successfully retrieved."],["paths./groups/{groupId}/apps/{appId}/api_keys/{apiKeyId}.delete.summary","Delete an :doc:`API key </authentication/api-key>`."],["paths./groups/{groupId}/apps/{appId}/api_keys/{apiKeyId}.delete.responses.204.description","The API key was successfully deleted."],["paths./groups/{groupId}/apps/{appId}/api_keys/{apiKeyId}/enable.put.summary","Enable an :doc:`API key </authentication/api-key>`."],["paths./groups/{groupId}/apps/{appId}/api_keys/{apiKeyId}/enable.put.responses.204.description","The API key was successfully enabled."],["paths./groups/{groupId}/apps/{appId}/api_keys/{apiKeyId}/disable.put.summary","Disable an :doc:`API key </authentication/api-key>`."],["paths./groups/{groupId}/apps/{appId}/api_keys/{apiKeyId}/disable.put.responses.204.description","The API key was successfully disabled."],["paths./groups/{groupId}/apps/{appId}/secrets.get.summary","List :ref:`secrets <define-secret>` associated with a Realm app."],["paths./groups/{groupId}/apps/{appId}/secrets.get.responses.200.description","The Secrets were successfully listed."],["paths./groups/{groupId}/apps/{appId}/secrets.post.summary","Create a new :doc:`Secret </values-and-secrets/define-and-manage-secrets>`."],["paths./groups/{groupId}/apps/{appId}/secrets.post.requestBody.description","The Secret to create."],["paths./groups/{groupId}/apps/{appId}/secrets.post.responses.201.description","The Secret was successfully created."],["paths./groups/{groupId}/apps/{appId}/secrets/{secretId}.put.summary","Modify a :doc:`Secret </values-and-secrets/define-and-manage-secrets>` associated with a Realm app."],["paths./groups/{groupId}/apps/{appId}/secrets/{secretId}.put.requestBody.description","The modified value of the Secret."],["paths./groups/{groupId}/apps/{appId}/secrets/{secretId}.put.responses.204.description","No body returned for response"],["paths./groups/{groupId}/apps/{appId}/secrets/{secretId}.delete.summary","Delete a :doc:`Secret </values-and-secrets/define-and-manage-secrets>` associated with a Realm app."],["paths./groups/{groupId}/apps/{appId}/secrets/{secretId}.delete.responses.204.description","The Secret was successfully deleted."],["paths./groups/{groupId}/apps/{appId}/functions.get.summary","List :ref:`functions <functions>`."],["paths./groups/{groupId}/apps/{appId}/functions.get.responses.200.description","Successfully listed."],["paths./groups/{groupId}/apps/{appId}/functions.post.summary","Create a new :ref:`function <functions>`."],["paths./groups/{groupId}/apps/{appId}/functions.post.requestBody.description","The function to create"],["paths./groups/{groupId}/apps/{appId}/functions.post.responses.201.description","The function was successfully created."],["paths./groups/{groupId}/apps/{appId}/functions/{functionId}.get.summary","Retrieve a :ref:`function <functions>`."],["paths./groups/{groupId}/apps/{appId}/functions/{functionId}.get.responses.200.description","The function was successfully retrieved."],["paths./groups/{groupId}/apps/{appId}/functions/{functionId}.delete.summary","Delete a :ref:`function <functions>`."],["paths./groups/{groupId}/apps/{appId}/functions/{functionId}.delete.responses.204.description","The function was successfully deleted."],["paths./groups/{groupId}/apps/{appId}/functions/{functionId}.put.summary","Update a :ref:`function <functions>`."],["paths./groups/{groupId}/apps/{appId}/functions/{functionId}.put.responses.200.description","The function was successfully updated."],["paths./groups/{groupId}/apps/{appId}/dependencies.get.summary","List :ref:`external dependencies <external-dependencies>` uploaded to the Realm app."],["paths./groups/{groupId}/apps/{appId}/dependencies.get.responses.200.description","The function was successfully retrieved."],["paths./groups/{groupId}/apps/{appId}/deployments.get.summary","Return the 100 most recent application deployments."],["paths./groups/{groupId}/apps/{appId}/deployments.get.responses.200.description","Successfully listed."],["paths./groups/{groupId}/apps/{appId}/drafts.get.summary","Return the current application deployment draft, if applicable."],["paths./groups/{groupId}/apps/{appId}/drafts.get.responses.200.description","Successfully listed."],["paths./groups/{groupId}/apps/{appId}/drafts.post.summary","Create a new application deployment draft, if none exists."],["paths./groups/{groupId}/apps/{appId}/drafts.post.responses.200.description","Successfully created draft."],["paths./groups/{groupId}/apps/{appId}/drafts.post.responses.409.description","Draft already exists"],["paths./groups/{groupId}/apps/{appId}/drafts/{draftId}.delete.summary","Discard the specified application deployment draft."],["paths./groups/{groupId}/apps/{appId}/drafts/{draftId}.delete.responses.204.description","The draft was successfully discarded."],["paths./groups/{groupId}/apps/{appId}/drafts/{draftId}/deployment.post.summary","Deploy the specified application deployment draft."],["paths./groups/{groupId}/apps/{appId}/drafts/{draftId}/deployment.post.responses.201.description","The draft was successfully deployed."],["paths./groups/{groupId}/apps/{appId}/drafts/{draftId}/diff.get.summary","Return a diff between the currently deployed application and the specified draft."],["paths./groups/{groupId}/apps/{appId}/drafts/{draftId}/diff.get.responses.200.description","Successfully diffed draft."],["paths./groups/{groupId}/apps/{appId}/hosting/assets.get.summary","List all hosted assets."],["paths./groups/{groupId}/apps/{appId}/hosting/assets.get.responses.200.description","Successfully listed hosted files."],["paths./groups/{groupId}/apps/{appId}/hosting/assets.post.summary","Move or copy a hosted asset to a new resource path."],["paths./groups/{groupId}/apps/{appId}/hosting/assets.post.requestBody.description","The hosted asset file and its metadata. (Must use ``Content-Type: multipart/mixed``)"],["paths./groups/{groupId}/apps/{appId}/hosting/assets.post.requestBody.content.application/json.schema.properties.move_from.description","The current resource path of the asset to move. Must be used with ``move_to``."],["paths./groups/{groupId}/apps/{appId}/hosting/assets.post.requestBody.content.application/json.schema.properties.move_to.description","The resource path to which the asset will move. Must be used with ``move_from``."],["paths./groups/{groupId}/apps/{appId}/hosting/assets.post.requestBody.content.application/json.schema.properties.copy_from.description","The current resource path of the asset to copy. Must be used with ``copy_to``."],["paths./groups/{groupId}/apps/{appId}/hosting/assets.post.requestBody.content.application/json.schema.properties.copy_to.description","The resource path to which the asset will be copied. Must be used with ``copy_from``."],["paths./groups/{groupId}/apps/{appId}/hosting/assets.post.responses.204.description","Successfully moved/copied the hosted asset."],["paths./groups/{groupId}/apps/{appId}/hosting/assets/asset.get.summary","Retrieve metadata for a specific hosted asset"],["paths./groups/{groupId}/apps/{appId}/hosting/assets/asset.get.responses.200.description","Successfully retrieved metadata for the hosted file."],["paths./groups/{groupId}/apps/{appId}/hosting/assets/asset.get.responses.404.description","Asset not found."],["paths./groups/{groupId}/apps/{appId}/hosting/assets/asset.put.summary","Upload or replace an asset at a specific resource path."],["paths./groups/{groupId}/apps/{appId}/hosting/assets/asset.put.requestBody.description","The hosted asset file and its metadata. (Must use ``Content-Type: multipart/mixed``)"],["paths./groups/{groupId}/apps/{appId}/hosting/assets/asset.put.requestBody.content.application/json.schema.properties.meta.description","An :ref:`asset metadata document <asset-metadata-document>` (encoded as JSON)."],["paths./groups/{groupId}/apps/{appId}/hosting/assets/asset.put.requestBody.content.application/json.schema.properties.file.description","The asset file to upload (encoded as binary)."],["paths./groups/{groupId}/apps/{appId}/hosting/assets/asset.put.responses.204.description","Successfully added/replaced the hosted asset."],["paths./groups/{groupId}/apps/{appId}/hosting/assets/asset.put.responses.400.description","Bad Request."],["paths./groups/{groupId}/apps/{appId}/hosting/assets/asset.patch.summary","Update the metadata attributes of a hosted asset at a specific resource path."],["paths./groups/{groupId}/apps/{appId}/hosting/assets/asset.patch.responses.204.description","Successfully updated the hosted asset."],["paths./groups/{groupId}/apps/{appId}/hosting/assets/asset.patch.responses.400.description","Bad Request."],["paths./groups/{groupId}/apps/{appId}/hosting/assets/asset.patch.requestBody.description","The new metadata attributes for the hosted asset. These attributes replace all existing attributes for the file."],["paths./groups/{groupId}/measurements.get.summary","List the request, compute, sync, and data transfer usage in a given period for :doc:`billing </billing>` purposes."],["paths./groups/{groupId}/measurements.get.parameters.[1].description","The ISO 8601 date and time of the start of the query period. Default is 00:00:00 UTC on the first day of the current month."],["paths./groups/{groupId}/measurements.get.parameters.[2].description","The ISO 8601 date and time of the end of the query period. Default is 23:59:59 UTC on the the last day of the current month."],["paths./groups/{groupId}/measurements.get.parameters.[3].description","Specifies the granularity of the query period, either P31D (31 day) or PT1H (1 hour). Default is P31D."],["paths./groups/{groupId}/measurements.get.responses.200.description","The measurements were successfully returned."],["paths./groups/{groupId}/measurements.get.responses.200.content.application/json.schema.properties.start.description","The :rfc:`RFC 3339 <3339>` date and time of the start of the query period, which can be specified with the ``start`` query parameter."],["paths./groups/{groupId}/measurements.get.responses.200.content.application/json.schema.properties.end.description","The :rfc:`RFC 3339 <3339>` date and time of the end of the query period, which can be specified with the ``end`` query parameter."],["paths./groups/{groupId}/measurements.get.responses.200.content.application/json.schema.properties.granularity.description","The granularity, which can be specified with the ``granularity`` query parameter."],["paths./groups/{groupId}/measurements.get.responses.200.content.application/json.schema.properties.group_id.description","The |atlas| :atlas:`Group ID </tutorial/manage-projects/>`."],["paths./groups/{groupId}/measurements.get.responses.200.content.application/json.schema.properties.measurements.description","The array of measurements."],["paths./groups/{groupId}/measurements.get.responses.200.content.application/json.schema.properties.measurements.items.properties.name.description","The usage metric represented by each data point. See :doc:`billing </billing>`."],["paths./groups/{groupId}/measurements.get.responses.200.content.application/json.schema.properties.measurements.items.properties.units.description","The unit of the ``value`` of each data point."],["paths./groups/{groupId}/measurements.get.responses.200.content.application/json.schema.properties.measurements.items.properties.data_points.description","The array of data points for this measurement. A finer ``granularity`` results in more data points."],["paths./groups/{groupId}/measurements.get.responses.200.content.application/json.schema.properties.measurements.items.properties.data_points.items.properties.timestamp.description","The ISO 8601 date and time of the data point."],["paths./groups/{groupId}/measurements.get.responses.200.content.application/json.schema.properties.measurements.items.properties.data_points.items.properties.value.description","The value at the time in the ``unit`` of the measurement."],["paths./groups/{groupId}/apps/{appId}/measurements.get.summary","List the request, compute, sync, data transfer, and memory usage of a specific app in a given period for :doc:`billing </billing>` purposes."],["paths./groups/{groupId}/apps/{appId}/measurements.get.parameters.[2].description","The ISO 8601 date and time of the start of the query period. Default is 00:00:00 UTC on the first day of the current month."],["paths./groups/{groupId}/apps/{appId}/measurements.get.parameters.[3].description","The ISO 8601 date and time of the end of the query period. Default is 23:59:59 UTC on the the last day of the current month."],["paths./groups/{groupId}/apps/{appId}/measurements.get.parameters.[4].description","Specifies the granularity of the query period, either P31D (31 day) or PT1H (1 hour). Default is P31D."],["paths./groups/{groupId}/apps/{appId}/measurements.get.responses.200.description","The measurements were successfully returned."],["paths./groups/{groupId}/apps/{appId}/measurements.get.responses.200.content.application/json.schema.properties.start.description","The RFC 3339 date and time of the start of the query period, which can be specified with the ``start`` query parameter."],["paths./groups/{groupId}/apps/{appId}/measurements.get.responses.200.content.application/json.schema.properties.end.description","The RFC 3339 date and time of the end of the query period, which can be specified with the ``end`` query parameter."],["paths./groups/{groupId}/apps/{appId}/measurements.get.responses.200.content.application/json.schema.properties.granularity.description","The granularity, which can be specified with the ``granularity`` query parameter."],["paths./groups/{groupId}/apps/{appId}/measurements.get.responses.200.content.application/json.schema.properties.group_id.description","The |atlas| :atlas:`Group ID </tutorial/manage-projects/>`."],["paths./groups/{groupId}/apps/{appId}/measurements.get.responses.200.content.application/json.schema.properties.appId.description","The Realm app ID specified by the ``appId`` path parameter."],["paths./groups/{groupId}/apps/{appId}/measurements.get.responses.200.content.application/json.schema.properties.appName.description","The name of the Realm app specified by the ``appId`` path parameter."],["paths./groups/{groupId}/apps/{appId}/measurements.get.responses.200.content.application/json.schema.properties.measurements.description","The array of measurements."],["paths./groups/{groupId}/apps/{appId}/measurements.get.responses.200.content.application/json.schema.properties.measurements.items.properties.name.description","The usage metric represented by each data point. See :doc:`billing </billing>`."],["paths./groups/{groupId}/apps/{appId}/measurements.get.responses.200.content.application/json.schema.properties.measurements.items.properties.units.description","The unit of the ``value`` of each data point."],["paths./groups/{groupId}/apps/{appId}/measurements.get.responses.200.content.application/json.schema.properties.measurements.items.properties.data_points.description","The array of data points for this measurement. A finer ``granularity`` results in more data points."],["paths./groups/{groupId}/apps/{appId}/measurements.get.responses.200.content.application/json.schema.properties.measurements.items.properties.data_points.items.properties.timestamp.description","The ISO 8601 date and time of the data point."],["paths./groups/{groupId}/apps/{appId}/measurements.get.responses.200.content.application/json.schema.properties.measurements.items.properties.data_points.items.properties.value.description","The value at the time in the ``unit`` of the measurement."],["components.parameters.AssetResourcePath.description","The resource path of a hosted asset."],["components.parameters.AssetResourcePathPrefix.description","Return only those assets where the resource path begins with the specified prefix."],["components.parameters.GroupId.description","An |atlas| :atlas:`Project/Group ID </tutorial/manage-projects/>`."],["components.parameters.AppId.description","The ObjectID of your application. :ref:`realm-api-project-and-application-ids` demonstrates how to find this value."],["components.parameters.UsersAfter.description","The ``id`` of the last user returned by a previous paginated request."],["components.parameters.UsersSort.description","The field name to sort to sort results by. The only valid value is the default: ``_id``."],["components.parameters.UsersDesc.description","If ``true``, returns sorted results in descending order.  If not specified or set to ``false, results return in ascending order."],["components.parameters.FunctionId.description","Function ID"],["components.parameters.ServiceId.description","Service ID"],["components.parameters.SecretId.description","Secret ID"],["components.parameters.CommandName.description","Command name"],["components.parameters.ValueId.description","Value ID"],["components.parameters.DraftId.description","Draft ID"],["components.parameters.RuleId.description","Rule ID"],["components.parameters.IncomingWebhookId.description","Incoming webhook ID"],["components.parameters.Email.description","Email address"],["components.parameters.MessageId.description","Message ID"],["components.parameters.Uid.description","UID"],["components.parameters.ProviderId.description","Provider ID"],["components.parameters.ApiKeyId.description","API Key ID"],["components.parameters.TriggerId.description","The ObjectID of the trigger."],["components.schemas.Application.properties._id.description","The application's unique internal ID."],["components.schemas.Application.properties.client_app_id.description","The application's public App ID."],["components.schemas.Application.properties.name.description","The name of the application."],["components.schemas.Application.properties.location.description","The application's deployment region."],["components.schemas.Application.properties.deployment_model.description","The application's deployment model."],["components.schemas.Application.properties.group_id.description","An |atlas| :atlas:`Project/Group ID </tutorial/manage-projects/>`."],["components.schemas.ApplicationSummary.properties._id.description","The application's unique internal ID."],["components.schemas.ApplicationSummary.properties.client_app_id.description","The application's public App ID."],["components.schemas.ApplicationSummary.properties.name.description","The name of the application."],["components.schemas.ApplicationSummary.properties.location.description","The application's deployment region."],["components.schemas.ApplicationSummary.properties.deployment_model.description","The application's deployment model."],["components.schemas.ApplicationSummary.properties.domain_id.description","The application's associated domain ID."],["components.schemas.ApplicationSummary.properties.group_id.description","The application's current owner ID."],["components.schemas.ApplicationSummary.properties.last_used.description","The time this app was last used."],["components.schemas.ApplicationSummary.properties.last_modified.description","The time this app was last modified."],["components.schemas.ApplicationSummary.properties.product.description","The product this app is for."],["components.schemas.ApplicationSummary.properties.environment.description","The environment the app is in."],["components.schemas.BuildInfo.properties.version.description","Human-readable version information about the mongod instance. This string will take the format ``<major>.<minor>.<patch>``."],["components.schemas.BuildInfo.properties.gitVersion.description","The commit identifier that identifies the state of the code use to build the mongod."],["components.schemas.BuildInfo.properties.versionArray.description","An array that conveys version information about the mongod instance. See version for a more readable version of this string."],["components.schemas.BuildInfo.properties.javascriptEngine.description","A string that reports the JavaScript engine used in the mongod instance. By default, this is ``mozjs`` after version ``3.2``, and previously ``V8``."],["components.schemas.BuildInfo.properties.bits.description","A number that reflects the target processor architecture of the mongod binary."],["components.schemas.BuildInfo.properties.debug.description","A boolean that reflects whether or not the ``mongod`` instance was built with debugging options."],["components.schemas.BuildInfo.properties.maxBsonObjectSize.description","A number that reports the :manual:`Maximum BSON Document Size </reference/limits/#BSON-Document-Size>`"],["components.schemas.DependenciesSummary.properties._id.description","The dependency collection's unique internal ID."],["components.schemas.DependenciesSummary.properties.location.description","The application's deployment region."],["components.schemas.DependenciesSummary.properties.user_id.description","The unique ``_id`` value of the MongoDB Cloud user that uploaded the dependency collection."],["components.schemas.DependenciesSummary.properties.last_modified.description","The time at which the dependencies were uploaded in :wikipedia:`Unix time <Unix_time>` (number of seconds since January 1, 1970 at 00:00 UTC)."],["components.schemas.DependenciesSummary.properties.dependencies_list.description","An array of documents that each describe a dependency uploaded to the application."],["components.schemas.Dependency.properties.name.description","The name of the uploaded dependency."],["components.schemas.Dependency.properties.version.description","The version of the uploaded dependency."],["components.schemas.DeploymentDraft.properties._id.description","The unique ID of the draft."],["components.schemas.DeploymentDraft.properties.user_id.description","The unique _id value of the MongoDB Cloud user that created the draft."],["components.schemas.Deployment.properties._id.description","The unique ID of the deployment."],["components.schemas.Deployment.properties.app_id.description","The unique _id value of the Realm app."],["components.schemas.Deployment.properties.draft_id.description","The unique _id value of the deployment draft associated with the deployment, if applicable."],["components.schemas.Deployment.properties.user_id.description","The unique _id value of the MongoDB Cloud user that deployed the draft."],["components.schemas.Deployment.properties.deployed_at.description","The time at which the deployment was made. Represented as the number of seconds since January 1, 1970."],["components.schemas.Deployment.properties.origin.description","The deployment method used to create the deployment."],["components.schemas.Deployment.properties.commit.description","The commit hash of the deployment (Automatic GitHub Deployment)"],["components.schemas.Deployment.properties.status.description","A message that indicates whether or not the deployment was successful."],["components.schemas.Deployment.properties.status_error_message.description","The error message of the error that caused the deployment to fail, if applicable."],["components.schemas.Deployment.properties.diff_url.description","A link to the diff of changes in the deployment (Automatic GitHub Deployment)"],["components.schemas.Diff.properties.diffs.description","A list where each item is the line-by-line diff for a specific configuration file."],["components.schemas.Diff.properties.hosting_files_diff.description","The filenames of hosted files that have been added, removed, or modified."],["components.schemas.Diff.properties.hosting_files_diff.properties.added.items.description","A list where each element is the name of a file that was added in the draft."],["components.schemas.Diff.properties.hosting_files_diff.properties.deleted.items.description","A list where each element is the name of a file that was deleted in the draft."],["components.schemas.Diff.properties.hosting_files_diff.properties.modified.items.description","A list where each element is the name of a file that was changed in the draft."],["components.schemas.Error.properties.error.description","A message that describes the error."],["components.schemas.Error.properties.error_code.description","The error type."],["components.schemas.NewApplication.properties.name.description","Can only contain ASCII letters, numbers, underscores, and hyphens."],["components.schemas.NewApplication.properties.template_id.description","Name of :ref:`supported template app <template-apps>` to serve as base template."],["components.schemas.DataSource.properties.name.description","Should be `\"mongodb-atlas\"`."],["components.schemas.DataSource.properties.type.description","Should be `\"mongodb-atlas\"`."],["components.schemas.DataSource.properties.config.properties.clusterName.description","Name of {+atlas-short+} cluster associated with the {+app+}."],["components.schemas.NewFunction.properties.can_evaluate.description","A JSON expression that evaluates to ``true`` if the Function is allowed to run in response to an incoming request."],["components.schemas.NewFunction.properties.name.description","A unique name for the Function."],["components.schemas.NewFunction.properties.private.description","If ``true``, the function is hidden from client applications. You can still call a private function from JSON expressions and other functions, including incoming webhooks and triggers."],["components.schemas.NewFunction.properties.source.description","The stringified source code for the function. The code must be valid ES6."],["components.schemas.NewFunction.properties.run_as_system.description","If ``true``, the function executes with full privileges,  bypassing rules on all services."],["components.schemas.Function.properties.can_evaluate.description","A JSON expression that evaluates to ``true`` if the Function is allowed to run in response to an incoming request."],["components.schemas.Function.properties.name.description","A unique name for the Function."],["components.schemas.Function.properties.private.description","If ``true``, the function is hidden from client applications. You can still call a private function from JSON expressions and other functions, including incoming webhooks and triggers."],["components.schemas.Function.properties.source.description","The stringified source code for the function. The code must be valid ES6."],["components.schemas.SyncDataResponse.properties.service_id.description","The Service ID for the currently synced cluster, if there is one."],["components.schemas.SyncDataResponse.properties.partition_fields.description","A list of valid partition keys based on the cluster's collection schemas."],["components.schemas.TriggerResponse.properties._id.description","The unique ID of the trigger."],["components.schemas.TriggerResponse.properties.name.description","The name of the trigger."],["components.schemas.TriggerResponse.properties.type.description","The type of the trigger."],["components.schemas.TriggerResponse.properties.function_id.description","The ID of the function associated with the trigger."],["components.schemas.TriggerResponse.properties.function_name.description","The name of the function associated with the trigger."],["components.schemas.TriggerResponse.properties.disabled.description","If true, the trigger is disabled and will not fire."],["components.schemas.TriggerRequest.properties.name.description","The name of the trigger."],["components.schemas.TriggerRequest.properties.type.description","The type of the trigger."],["components.schemas.TriggerRequest.properties.function_id.description","The ID of the function associated with the trigger."],["components.schemas.TriggerRequest.properties.disabled.description","Default: ``false`` If true, the trigger is disabled."],["components.schemas.TriggerRequest.properties.config.description","An object that defines configuration values for the trigger."],["components.schemas.TriggerRequest.properties.config.properties.operation_types.description","**Required for Database Triggers** -- The :ref:`database event operation types <database-events>` to listen for. This must contain at least one value."],["components.schemas.TriggerRequest.properties.config.properties.operation_type.description","**Required for Authentication Triggers** -- The :ref:`authentication operation type <authentication-event-operation-types>` to listen for."],["components.schemas.TriggerRequest.properties.config.properties.providers.description","**Only Available for Authentication Triggers** -- A list of one or more :doc:`authentication provider </authentication/providers>` id values. The trigger will only listen for authentication events produced by these providers."],["components.schemas.TriggerRequest.properties.config.properties.database.description","**Required for Database Triggers** -- The name of the MongoDB database that contains the watched collection."],["components.schemas.TriggerRequest.properties.config.properties.collection.description","**Required for Database Triggers** -- The name of the MongoDB collection that the trigger watches for change events. The collection must be part of the specified database."],["components.schemas.TriggerRequest.properties.config.properties.service_id.description","**Required for Database Triggers** -- The ID of the MongoDB Service associated with the trigger."],["components.schemas.TriggerRequest.properties.config.properties.match.description","**Only Available for Database Triggers** -- A :manual:`$match </reference/operator/aggregation/match>` expression document that MongoDB Realm includes in the underlying change stream pipeline for the trigger. This is useful when you want to filter change events beyond their operation type. The trigger will only fire if the expression evaluates to true for a given change event."],["components.schemas.TriggerRequest.properties.config.properties.full_document.description","**Only Available for Database Triggers** -- If true, indicates that ``UPDATE`` change events should include the most current :manual:`majority-committed </reference/read-concern-majority/>` version of the modified document in the ``fullDocument`` field."],["components.schemas.TriggerRequest.properties.config.properties.full_document_before_change.description","**Only Available for Database Triggers** -- If true, indicates that the ``UPDATE`` change event response should include a copy of the modified document from before the update was applied. :ref:`Preimages <trigger-preimages>`  must be enabled."],["components.schemas.TriggerRequest.properties.config.properties.schedule.description","**Only Available for Scheduled Triggers** -- A :doc:`cron expression </triggers/cron-expressions>` that defines the trigger schedule."],["components.schemas.TriggerRequest.properties.event_processors.description","An object where each field name is an event processor ID and each value is an object that configures its corresponding event processor. The following event processors are supported: ``AWS_EVENTBRIDGE`` For an example configuration object, see :ref:`Send Trigger Events to AWS EventBridge <event_processor_example>`."],["components.schemas.MetadataAttribute.properties.name.description","The :doc:`metadata attribute </hosting/file-metadata-attributes>` name."],["components.schemas.MetadataAttribute.properties.value.description","The :doc:`metadata attribute </hosting/file-metadata-attributes>` value."],["components.schemas.AssetMetadata.properties.path.description","The resource path of the asset"],["components.schemas.AssetMetadata.properties.size.description","The size of the asset in bytes"],["components.schemas.AssetMetadata.properties.attrs.description","An array of documents that each describe a :doc:`metadata attribute </hosting/file-metadata-attributes>` that applies to the asset."],["components.schemas.AssetMetadata.properties.hash.description","The MD5 checksum hash for the asset"],["components.schemas.HostedAssetMetadata.properties.appId.description","The unique App ID of the Realm app that is hosting the file."],["components.schemas.HostedAssetMetadata.properties.last_modified.description","The time at which the hosted asset was last modified in :wikipedia:`Unix time <Unix_time>` (number of seconds since January 1, 1970 at 00:00 UTC)."],["components.schemas.HostedAssetMetadata.properties.url.description","The full URL of the hosted asset."],["components.schemas.HostedAssetMetadata.properties.path.description","The resource path of the hosted asset"],["components.schemas.HostedAssetMetadata.properties.size.description","The size of the hosted asset in bytes"],["components.schemas.HostedAssetMetadata.properties.attrs.description","An array of documents that each describe a :doc:`metadata attribute </hosting/file-metadata-attributes>` that applies to the asset."],["components.schemas.HostedAssetMetadata.properties.hash.description","The MD5 checksum hash for the hosted asset"],["components.securitySchemes.tokenAuth.description","The authorization token provided in the ``access_token`` field of the `POST /auth/providers/{provider}/login <{+base-url+}{+admin-api-page+}post-/auth/providers/{provider}/login>`_ and `POST /auth/session <{+base-url+}{+admin-api-page+}post-/auth/session>`_ API endpoints."],["components.securitySchemes.refreshAuth.description","The authorization token provided in the ``refresh_token`` field of the `POST /auth/providers/{provider}/login <{+base-url+}{+admin-api-page+}post-/auth/providers/{provider}/login>`_ API endpoint."],["components.responses.ClientErrorResponse.description","There is an error in the request."],["components.responses.ClientErrorResponse.content.application/json.schema.properties.error.description","A message describing the error."],["tags.[0].description","Realm Administrator APIs"],["tags.[1].description","API Key APIs"],["tags.[2].description","Billing APIs"],["tags.[3].description","Secrets APIs"],["tags.[4].description","Application-level APIs"],["tags.[5].description","Auth Provider APIs"],["tags.[6].description","Email APIs"],["tags.[7].description","Functions APIs"],["tags.[8].description","Logging APIs"],["tags.[9].description","Notifications APIs"],["tags.[10].description","Rules APIs"],["tags.[11].description","Security APIs"],["tags.[12].description","Services APIs"],["tags.[13].description","Sync APIs"],["tags.[14].description","Users APIs"],["tags.[15].description","Values APIs"],["tags.[16].description","Incoming Webhook APIs"],["tags.[17].description","Event Trigger APIs"],["tags.[18].description","Static File Hosting APIs"],["tags.[19].description","Application Deployment APIs"],["tags.[20].description","Dependency APIs"]]